# Artists that have appeared in the Billboard Top 30 Four Times
top_artists <- names(which(table(data$artist) == 4))
data <- read.csv("spotify.csv", header = TRUE)
data <- read.csv("spotify.csv", header = TRUE)
data <- read.csv("spotify.csv", header = TRUE)
data <- read.csv("spotify.csv", header = TRUE)
dir <- getwd()
fullpath <- file.path(dir,"spotify.csv")
data <- read.csv("spotify.csv", header = TRUE)
dir <- getwd()
data <- read.csv(file.path(dir, "spotify.csv"), header = TRUE)
dir <- getwd()
data <- read.csv(file.path(dir, "spotify.csv"), header = TRUE)
dir <- getwd()
data <- read.csv(file.path(dir, "spotify.csv"), header = TRUE)
library(kableExtra)
plot_corr <- function(x, y) {
plot(0, 0,
main = "",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
col = "white")
text(x = 0, y = 0,
labels = paste(round(cor(x, y), 4)),
col = "firebrick",
cex = 2)
}
par(mfcol = c(3, 3), mar = c(1, 4, 4, 1))
plot_corr(data$valence, data$bpm)
title(ylab = "bpm", font.lab = 2)
title(main="valence", font=2)
plot_corr(data$valence, data$energy)
title(ylab = "energy", font.lab = 2)
plot_corr(data$valence, data$danceability)
title(ylab = "danceability", font.lab = 2)
plot_corr(data$valence, data$loudness)
title(ylab = "loudness", font.lab = 2)
title(main="valence", font=2)
plot_corr(data$valence, data$liveness)
title(ylab = "liveness", font.lab = 2)
plot_corr(data$valence, data$duration)
title(ylab = "duration", font.lab = 2)
plot_corr(data$valence, data$acousticness)
title(ylab = "acousticness", font.lab = 2)
title(main="valence", font=2)
plot_corr(data$valence, data$speechiness)
title(ylab = "speechiness", font.lab = 2)
plot_corr(data$valence, data$popularity)
title(ylab = "popularity", font.lab = 2)
# Artists that have appeared in the Billboard Top 30 Four Times
top_artists <- names(which(table(data$artist) == 4))
num_appears <- rep(0, length(top_artists))
artist_valence <- rep(0, length(top_artists))
for (i in 1:length(top_artists)) {
artist_match <- data$artist == top_artists[i]
song_valence <- data[artist_match, ]$valence
num_appears[i] <- length(song_valence)
artist_valence[i] <- round(mean(song_valence))
}
kable_styling(kable(data.frame(artist = top_artists, num_hits = num_appears, avg_valence = artist_valence)))
# Using Spotify.csv data
# Using columns 11-13 for duration, acousticness, speechiness
dir <- getwd()
data <- read.csv(file.path(dir, "spotify.csv"), header = TRUE)
df <- data[,11:13]
# Plot Correlation coefficients between x,y
plot_corr <- function(x, y, x_lab, y_lab) {
plot(0, 0,
main = "",
xlab = x_lab,
ylab = y_lab,
xaxt = "n",
yaxt = "n",
col = "white")
text(x = 0, y = 0,
labels = paste(round(cor(x, y), 4)),
col = "firebrick",
cex = 2)
}
# Plot Scatter Plot between x,y variates
plot_scatt <- function(x,y,x_lab,y_lab) {
plot(x, y,
main = "",
xlab = x_lab,
ylab = y_lab,
pch = 16,
col = adjustcolor(col = "firebrick", alpha.f = 0.4))
}
# Plot Histogram between x,y variates
plot_hist <- function (x,lab) {
hist(x,
main = "",
xlab = "",
ylab = lab,
col = "gray80")
}
# Matrix Plot
matrix.plot <- function(df) {
m <- ncol(df)
n <- nrow(df)
# m*m columns of plots
par(mfcol = c(m, m))
for (i in 1:m) {
for (j in 1:m) {
if (i==j) {
plot_hist(df[,i],colnames(df)[i])
}
else if (i>j) {
plot_scatt(df[,i],df[,j],colnames(df)[i],colnames(df)[j])
}
else {
plot_corr(df[,i], df[,j], colnames(df)[i], colnames(df)[j])
}
}
}
}
matrix.plot(df)
library(kableExtra)
plot_corr <- function(x, y) {
plot(0, 0,
main = "",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
col = "white")
text(x = 0, y = 0,
labels = paste(round(cor(x, y), 4)),
col = "firebrick",
cex = 2)
}
par(mfcol = c(3, 3), mar = c(1, 4, 4, 1))
plot_corr(data$valence, data$bpm)
title(ylab = "bpm", font.lab = 2)
title(main="valence", font=2)
plot_corr(data$valence, data$energy)
title(ylab = "energy", font.lab = 2)
plot_corr(data$valence, data$danceability)
title(ylab = "danceability", font.lab = 2)
plot_corr(data$valence, data$loudness)
title(ylab = "loudness", font.lab = 2)
title(main="valence", font=2)
plot_corr(data$valence, data$liveness)
title(ylab = "liveness", font.lab = 2)
plot_corr(data$valence, data$duration)
title(ylab = "duration", font.lab = 2)
plot_corr(data$valence, data$acousticness)
title(ylab = "acousticness", font.lab = 2)
title(main="valence", font=2)
plot_corr(data$valence, data$speechiness)
title(ylab = "speechiness", font.lab = 2)
plot_corr(data$valence, data$popularity)
title(ylab = "popularity", font.lab = 2)
top_artists <- names(which(table(data$artist) == 4))
num_appears <- rep(0, length(top_artists))
artist_valence <- rep(0, length(top_artists))
for (i in 1:length(top_artists)) {
artist_match <- data$artist == top_artists[i]
song_valence <- data[artist_match, ]$valence
num_appears[i] <- length(song_valence)
artist_valence[i] <- round(mean(song_valence))
}
kable_styling(kable(data.frame(artist = top_artists, num_hits = num_appears, avg_valence = artist_valence)))
library(kableExtra)
top_artists <- names(which(table(data$artist) == 4))
num_appears <- rep(0, length(top_artists))
artist_valence <- rep(0, length(top_artists))
for (i in 1:length(top_artists)) {
artist_match <- data$artist == top_artists[i]
song_valence <- data[artist_match, ]$valence
num_appears[i] <- length(song_valence)
artist_valence[i] <- round(mean(song_valence))
}
kable_styling(kable(data.frame(artist = top_artists, num_hits = num_appears, avg_valence = artist_valence)))
